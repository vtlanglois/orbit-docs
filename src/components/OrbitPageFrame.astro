---
import MobileMenuToggle from 'virtual:starlight/components/MobileMenuToggle';
import type { Props } from '@astrojs/starlight/props';
const isHomepage = Astro.props.slug === '';
const { hasSidebar} = Astro.props;


---

<div class="page sl-flex">
    {
        !isHomepage && (
         <header class="header"><slot name="header" /></header>
        )
    }
	
	{
		!isHomepage && hasSidebar && (
			<nav class="sidebar" aria-label={Astro.locals.t('sidebarNav.accessibleLabel')}>
				<MobileMenuToggle {...Astro.props} />
				<div id="starlight__sidebar" class="sidebar-pane">
					<div class="sidebar-content sl-flex">
						<slot name="sidebar" />
					</div>
				</div>
			</nav>
		)
	}
	<div class="main-frame"><slot /></div>
</div>

<style>
	body {
		
	
		--sl-color-bg-sidebar: transparent;

	}
	body:has(.orbitron) {
		background-color: var(--background-color);
	}
	
	.page {
		flex-direction: column;
		
	}

	.header {
		z-index: var(--sl-z-index-navbar);
		position: fixed;
		inset-inline-start: 0;
		inset-block-start: 0;
		width: 100%;
		height: var(--sl-nav-height);
		border-bottom: 1px dashed rgba(0, 0, 0, 0);
		padding: var(--sl-nav-pad-y) var(--sl-nav-pad-x);
		padding-inline-end: var(--sl-nav-pad-x);
		background-color: var(--sl-color-black);
		
	}

	:global(.content-panel) {
    border-top: 1px solid rgba(0, 0, 0, 0) !important;
	}
	:global(.content-panel):has(.orbitron) {
    padding: 0;
	}
	:global(.right-sidebar) {
	 border-inline-start: 1px solid rgba(0, 0, 0, 0) !important;
	}
	:global([data-has-sidebar]) .header {
		padding-inline-end: calc(var(--sl-nav-gap) + var(--sl-nav-pad-x) + var(--sl-menu-button-size));
	}

	/* :global([data-has-sidebar]) body {
		background: radial-gradient(circle at 12% 4%, rgba(255, 255, 255, 1) 63%, rgba(218, 218, 218, 0.19) 11%);
		background-attachment: fixed;
			}
 */
	.sidebar-pane {
		visibility: var(--sl-sidebar-visibility, hidden);
		position: fixed;
		z-index: var(--sl-z-index-menu);
		inset-block: var(--sl-nav-height) 0;
		inset-inline-start: 0;
		width: 100%;
		background-color: var(--sl-color-black);
		overflow-y: auto;
	}

	:global([aria-expanded='true']) ~ .sidebar-pane {
		--sl-sidebar-visibility: visible;
	}

	.sidebar-content {
		height: 100%;
		min-height: max-content;
		padding: 1rem var(--sl-sidebar-pad-x) 0;
		flex-direction: column;
		gap: 1rem;
	}

	@media (min-width: 50rem) {
		.sidebar-content::after {
			content: '';
			padding-bottom: 1px;
		}
	}

	:global([data-has-sidebar]) .main-frame {
		padding-top: calc(var(--sl-nav-height) + var(--sl-mobile-toc-height));
		padding-inline-start: var(--sl-content-inline-start);
	}

	.main-frame {
		padding: 0;
		padding-inline-start: 0;
	}

	@media (min-width: 50rem) {
		:global([data-has-sidebar]) .header {
			padding-inline-end: var(--sl-nav-pad-x);
		}
		.sidebar-pane {
			--sl-sidebar-visibility: visible;
			width: var(--sl-sidebar-width);
			 background-color: var(--sl-color-black);
			border-inline-end: 1px dashed rgba(0, 0, 0, 0);
		}
	}

	
</style>
